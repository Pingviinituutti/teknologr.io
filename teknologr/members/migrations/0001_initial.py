# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2017-03-06 23:16
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Decoration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecorationOwnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('acquired', models.DateField()),
                ('decoration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Decoration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Functionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FunctionaryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('begin_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('given_names', models.CharField(default='UNKNOWN', max_length=64)),
                ('preferred_name', models.CharField(default='UNKNOWN', max_length=32)),
                ('surname', models.CharField(default='UNKNOWN', max_length=32)),
                ('maiden_name', models.CharField(blank=True, default='', max_length=32)),
                ('nickname', models.CharField(blank=True, default='', max_length=32)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('student_id', models.CharField(blank=True, default='', max_length=10)),
                ('gender', models.CharField(choices=[('UN', 'Okänd'), ('M', 'Man'), ('F', 'Kvinna')], default='UN', max_length=2)),
                ('nationality', django_countries.fields.CountryField(blank=True, default='', max_length=2)),
                ('enrolment_year', models.IntegerField(blank=True, null=True)),
                ('graduated', models.BooleanField(default=False)),
                ('graduated_year', models.IntegerField(blank=True, null=True)),
                ('degree_programme', models.CharField(choices=[('UN', 'Okänd'), ('ARTS - Högskolan för konst, design och arkitektur', (('ARK', 'Arkitektur'), ('BP', 'Bildkonstpedagogik'), ('DS', 'Design'), ('DK', 'Dokumentärfilm'), ('FM', 'Film- och tv-manuskript'), ('FP', 'Film- och tv-produktion'), ('FS', 'Film- och tv-scenografi'), ('FK', 'Filmklippning'), ('FL', 'Filmljudinspelning och -ljudplanering'), ('FI', 'Filmning'), ('FR', 'Filmregi'), ('GD', 'Grafisk design'), ('IA', 'Inredningsarkitektur'), ('KD', 'Kostymdesign'), ('LA', 'Landskapsarkitektur'), ('MD', 'Mode'), ('TS', 'Teaterscenografi'))), ('BIZ - Handelshögskolan', (('KT', 'Kauppatieteet'),)), ('CHEM - Högskolan för kemiteknik', (('KB', 'Kemi-, bio- och materialteknik'),)), ('ELEC - Högskolan för elektroteknik', (('AI', 'Automations- och informationsteknologi'), ('BI', 'Bioinformationsteknologi'), ('EL', 'Elektronik och elektroteknik'))), ('ENG - Högskolan för ingenjörsvetenskaper', (('BM', 'Den byggda miljön'), ('EM', 'Energi- och miljöteknik'), ('MB', 'Maskin- och byggnadsteknik'))), ('SCI - Högskolan för teknikvetenskaper', (('DT', 'Datateknik'), ('IN', 'Informationsnätverk'), ('PE', 'Produktionsekonomi'), ('TF', 'Teknisk fysik och matematik')))], default='UN', max_length=256)),
                ('stalm', models.BooleanField(default=False)),
                ('dead', models.BooleanField(default=False)),
                ('mobile_phone', models.CharField(blank=True, default='', max_length=20)),
                ('phone', models.CharField(blank=True, default='', max_length=20)),
                ('street_address', models.CharField(blank=True, default='', max_length=64)),
                ('postal_code', models.CharField(blank=True, default='', max_length=64)),
                ('city', models.CharField(blank=True, default='', max_length=64)),
                ('country', django_countries.fields.CountryField(blank=True, default='', max_length=2)),
                ('url', models.CharField(blank=True, default='', max_length=64)),
                ('email', models.CharField(blank=True, default='', max_length=64)),
                ('subscribed_to_modulen', models.BooleanField(default=False)),
                ('allow_publish_info', models.BooleanField(default=True)),
                ('username', models.CharField(blank=True, default='', max_length=32)),
                ('crm_id', models.CharField(blank=True, default='', max_length=32)),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='groupmembership',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Member'),
        ),
        migrations.AddField(
            model_name='group',
            name='grouptype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.GroupType'),
        ),
        migrations.AddField(
            model_name='functionary',
            name='functionarytype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.FunctionaryType'),
        ),
        migrations.AddField(
            model_name='functionary',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Member'),
        ),
        migrations.AddField(
            model_name='decorationownership',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.Member'),
        ),
    ]
